from classes import Singleton as engine
import json

def get_curr_project_data(info, only_path_text=True):
    gamejsloc = info[4]
    broken    = False
    try:
        gamejs    = json.loads(open(gamejsloc).read())
        title     = gamejs["game_name"]
        ver       = gamejs["project-ver"]
        eklver    = gamejs["eklips-ver"]
    except:
        broken     = True
        title      = info[0]
        ver,eklver = info[1],info[2]
    path      = info[3]
    return path,title,ver,eklver,broken

def get_projects():
    return engine.savefile.get("projects", [])

def _onready(self):
    projects = get_projects()
    scene    = engine.scene
    
    x  = 0
    y  = 0
    id = -1
    for i in projects:
        id                                  += 1
        path, name, version, ekl_ver, broken = get_curr_project_data(i)

        width = 250
        
        scene.add_node({
            "type":       "ColorRect",
            "properties": {
                "transform": {  
                    "pos":    [50+x,100+y],
                    "rot":    0,           
                    "anchor": "",          
                    "layer":  10,          
                    "alpha":  1,           
                    "scale":  [5,95],      
                    "scroll": [0,0]        
                },
                "visible": True,
                "color":   [20,20,30]
            },
            "script_properties": {},
            "name":              f"ProjectPointRec{i}",
            "script":            None,
            "path":              "",
            "runtimedata":       0
        })
        lbl_name = scene.add_node({
            "type":       "Label",
            "properties": {
                "transform": {
                    "pos":    [60+x,85+y],
                    "rot":    0,
                    "anchor": "",
                    "layer":  11,
                    "alpha":  1,
                    "scale":   [5,95],
                    "scroll": [0,0]
                },
                "visible":   True,
                "text":      name,
                "color":     [255,255,255],
                "font_size": 28
            },
            "script_properties": {},
            "name":              f"Text{i}{name}",
            "script":            None,
            "path":              "",
            "runtimedata":       0
        })
        lbl_ver = scene.add_node({
            "type":       "Label",
            "properties": {
                "transform": {
                    "pos":    [60+x,132+y],
                    "rot":    0,
                    "anchor": "",
                    "layer":  11,
                    "alpha":  1,
                    "scale":   [5,95],
                    "scroll": [0,0]
                },
                "visible":   True,
                "text":      f"App {version} | Ekl {ekl_ver}",
                "color":     [40,40,60],
                "font_size": 15
            },
            "script_properties": {},
            "name":              f"Text{i}{version}{ekl_ver}",
            "script":            None,
            "path":              "",
            "runtimedata":       0
        })

        lbl_name.draw()
        lbl_ver.draw()
        j           = lbl_name.w - lbl_ver.w
        if j > 0: j = 0
        width = int(lbl_name.w + j + 25)
        
        scene.add_node({
            "type":       "Button",
            "properties": {
                "transform": {
                    "pos":    [50+x,  100+y],
                    "rot":    0,
                    "anchor": "",
                    "layer":  -10,
                    "alpha":  1,
                    "scale":   [width, 365],
                    "scroll": [0,     0]
                },
                "visible":   True,
                "color":     [0,0,0],
                "text":      "",
                "font_size": 20,
                "projdata":  i,
                "broken":    broken,
                "projid":    id
            },
            "script_properties": {},
            "name":              f"ProjectPoint{i}{x}",
            "script":            "res://data/pick_project.ekl",
            "path":              "",
            "runtimedata":       0
        })

        x+=200